name: Python package


on:
  push:
    branches:
      - master
      - develop
    tags:
      - 'v*.*.*'


env:
  PYTHON_VERSION: 3.8
  PACKAGE_NAME: example


jobs:
  lint_package:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "${{env.PYTHON_VERSION}}"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - name: Install dependencies
        run: |
          pipenv install --dev

      - name: Lint project using pylint
        run: |
          pipenv run pylint ${{env.PACKAGE_NAME}}

      - name: Lint project using flake8
        run: |
          pipenv run flake8 ${{env.PACKAGE_NAME}}


  test_package:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "${{env.PYTHON_VERSION}}"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - name: Install dependencies
        run: |
          pipenv install --dev

      - name: Run project's tests sets
        run: |
          pipenv run python -m pytest tests/ -s


  pypi_release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    needs:
      - lint_package
      - test_package  
    
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "${{env.PYTHON_VERSION}}"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - name: Install dependencies
        run: |
          pipenv install --dev

      - name: Freeze requirements
        run: |
          pipenv lock -r > requirements
    
      - name: Build python package and wheel
        run: pipenv run python setup.py sdist bdist_wheel
      
      - name: Publish the distribuable to PyPI
        run: pipenv run twine upload -u __token__ -p ${{ secrets.PYPI_TOKEN }} dist/*
